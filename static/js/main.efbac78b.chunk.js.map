{"version":3,"sources":["calendar/event/Event.js","bar/hour/HourBar.js","calendar/layers/day/DayLayer.js","calendar/layers/hour/HourLayer.js","decoder/MouseDecoder.js","calendar/layers/input/InputLayer.js","resize/Resizable.js","calendar/layers/event/layout/EventLayerOuter.js","calendar/layers/event/EventLayer.js","calendar/event/EventCalendar.js","bar/day/DayBar.js","calendar/week/WeekCalendar.js","demo/demo.js","index.js"],"names":["Event","_React$PureComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","editing","inherits","createClass","key","value","_this2","startFormatted","format","start","endFormatted","end","formatStr","concat","react_default","a","createElement","id","toString","draggable","onDrag","onEventDrag","bind","onDrop","onEventDrop","onDragStart","onEventDragStart","onDragOver","onEventDragOver","style","height","onDoubleClick","e","setState","React","PureComponent","HourBar","apply","arguments","hours","endHour","startHour","display","gridTemplateRows","gridRow","ret","curTime","Date","setMinutes","i","setHours","hourTime","push","Fragment","getHourStyle","className","getHours","DayLayer","numDays","gridTemplateColumns","getDayStyle","getDayLines","HourLayer","getHourLinesStyle","getHourLines","decodeEvent","evt","decodeEvent0","clientX","clientY","boundingBox","document","getElementById","getBoundingClientRect","x","left","y","top","numHours","minuteIntervals","Math","floor","minutes","gridCol","width","setSeconds","setDay","InputLayer","defaultProps","preventDefault","Resizable","onResize","startResize","console","log","endResize","getStartResize","children","getEndResize","EventLayerOuterInator","event","eventColumnMap","columnIndex","endIndex","length","some","isContainedBy","gridColumn","eventStart","eventEnd","gridColPos","getEventColumnStyle","startTime5MinuteIntervals","getMinutes","endTime5MinuteIntervals","objectSpread","evt1","evt2","isBefore","Array","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","events","Symbol","iterator","next","done","day","getDay","err","return","columns","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_loop","curColumn","_i","_columns","column","every","eventPerColumn","_iterator2","_this3","eventsPerColumn","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_loop2","getEventStyle","classNames","eventClassName","eventObj","assign","onEventResize","position","Resizable_Resizable","getEvent","_iterator3","earliestHour","diffIn5MinuteIntervals","sort","e1","e2","differenceInMinutes","eventsByDay","getEventsByDays","idx","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","eventsPerDay","sortedEvents","sortEvents","getEventColumnMap","styledEvents","layoutEventsPerDay","styledDays","layout","EventLayer","name","stopPropagation","dataTransfer","setData","JSON","stringify","mouseY","target","EventLayerOuter_EventLayerOuterInator","getEventCalendarStyle","EventCalendar","draggedEvent","dragType","dragLayer","timeClickedOn","layerName","timeEventDroppedOn","data","parse","getData","droppedEl","newY","decodeEventRespectElement","error","warn","typeResize","eventLayers","layers","map","layer","EventLayer_EventLayer","getEventCalendarWrapperStyle","HourLayer_HourLayer","DayLayer_DayLayer","InputLayer_InputLayer","DayBar","curDay","startOfWeek","weekStartsOn","dayStr","addDays","getDays","NUM_DAYS_IN_WEEK","NUM_DAYS_IN_WORK_WEEK","WeekCalendar","workWeek","_ref","startHours","toConsumableArray","max","min","_ref2","endHours","getMaxHour","getMinHour","getWeekCalendarStyle","DayBar_DayBar","HourBar_HourBar","EventCalendar_EventCalendar","onCalendarClick","Demo","numCreated","setMilliseconds","preferences","Event_Event","droppedEventId","dropType","droppedEvent","filter","secondsDiff","differenceInSeconds","newEvent","addSeconds","eventsWithoutDroppedEvent","preferencesWithoutDroppedEvent","timeEventResizedTo","minVal","addMinutes","preferencesWithoutDropEvent","addHours","WeekCalendar_WeekCalendar","ReactDOM","render","padding","demo_Demo"],"mappings":"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","file":"static/js/main.efbac78b.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {format} from 'date-fns';\n\nexport class Event extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            editing: false\n        }\n    }\n\n    /**\n     * Returns a renderable react component\n     */\n    render() {\n        const startFormatted = format(this.props.start, 'h:mma');\n        const endFormatted = format(this.props.end, 'h:mma');\n\n        const formatStr = `${startFormatted}-${endFormatted}`;\n\n        return (\n            <div\n                id={`${this.props.id}-drag`}\n                key={this.props.start.toString() + this.props.end.toString()}\n\n                draggable={true}\n                onDrag={this.props.onEventDrag.bind(this, this.props.id)}\n                onDrop={this.props.onEventDrop.bind(this)}\n                // setting data onto dataTransfer so that can recognize what div was dragged on drop\n                onDragStart={this.props.onEventDragStart.bind(this)}\n                onDragOver={this.props.onEventDragOver.bind(this)}\n                style={{height: \"100%\"}}>\n\n                <div onDoubleClick={(e) => this.setState({editing: true})}\n                     style={{height: \"100%\"}}>\n                    {this.state.editing && <div>hello </div>}\n                    <div>{formatStr}</div>\n                </div>\n            </div>\n        )\n    }\n}\n\nEvent.propTypes = {\n    id: PropTypes.string.isRequired,\n    start: PropTypes.instanceOf(Date).isRequired,\n    end: PropTypes.instanceOf(Date).isRequired,\n\n    onEventDrag: PropTypes.func.isRequired,\n    onEventDrop: PropTypes.func.isRequired,\n    onEventDragStart: PropTypes.func.isRequired,\n    onEventDragOver: PropTypes.func.isRequired,\n    onEventResize: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport \"./HourBar.css\";\n\nimport {format} from \"date-fns\";\n\nexport class HourBar extends React.PureComponent {\n\n    getHourBarStyle() {\n        const hours = this.props.endHour - this.props.startHour;\n\n        return {\n            display: \"grid\",\n            gridTemplateRows: `repeat(${hours}, 1fr)`,\n            height: \"100%\",\n        };\n    }\n\n    getHourStyle(start) {\n        return {\n            gridRow: `${start} / ${start + 1}`\n        };\n    }\n\n    getHours() {\n        const ret = [];\n        const curTime = new Date();\n        curTime.setMinutes(0, 0, 0);\n\n        for (let i = this.props.startHour; i < this.props.endHour; i++) {\n            curTime.setHours(i);\n            const hourTime = format(curTime, \"ha\");\n            ret.push((\n                <React.Fragment key={hourTime}>\n                    <div key={hourTime} style={this.getHourStyle(i - this.props.startHour + 2)}\n                         className=\"hour-step-container\">\n                        <div>\n                            {hourTime}\n                        </div>\n                    </div>\n                </React.Fragment>\n            ));\n        }\n        return ret;\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.getHours()}\n            </React.Fragment>\n        );\n    }\n}\n\nHourBar.propTypes = {\n    startHour: PropTypes.number.isRequired,\n    endHour: PropTypes.number.isRequired\n};\n","import React from 'react';\nimport \"./DayLayer.css\";\nimport PropTypes from 'prop-types';\n\n\nexport class DayLayer extends React.PureComponent {\n\n    getDayLines() {\n        const ret = [];\n        for (let i = 0; i < this.props.numDays; i++) {\n            ret.push((\n                <div key={i + \"day-line\"} className=\"day-line\"/>\n            ))\n        }\n        return ret;\n    }\n\n    getDayStyle() {\n        return {\n            display: \"grid\",\n            gridTemplateColumns: `repeat(${this.props.numDays}, 1fr)`,\n            height: \"100%\",\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"day-layer\" style={this.getDayStyle()}>\n                {this.getDayLines()}\n            </div>\n        );\n    }\n}\n\nDayLayer.propTypes = {\n    numDays: PropTypes.number.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport \"./HourLayer.css\"\n\nexport class HourLayer extends React.PureComponent {\n\n    getHourLines() {\n        const ret = [];\n        for (let i = this.props.startHour; i < this.props.endHour; i++) {\n            const hourTime = `${i}:00`;\n            ret.push((\n                <div key={hourTime + \"hour-line\"}\n                     className=\"hour-line\" />\n            ))\n        }\n        return ret;\n    }\n\n    getHourLinesStyle() {\n        const hours = this.props.endHour - this.props.startHour;\n        return {\n            display: \"grid\",\n            gridTemplateRows: `repeat(${hours}, 1fr)`,\n            height: \"100%\",\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"hour-layer\" style={this.getHourLinesStyle()}>\n                {this.getHourLines()}\n            </div>\n        );\n    }\n}\n\nHourLayer.propTypes = {\n    startHour: PropTypes.number.isRequired,\n    endHour: PropTypes.number.isRequired\n}\n","import {setHours, setMinutes, setSeconds, setDay} from 'date-fns';\n\nexport function decodeEvent(evt, numDays, startHour, endHour) {\n    return decodeEvent0(evt.clientX, evt.clientY, numDays, startHour, endHour);\n}\n\n/**\n * Returns the hour and day of where the click occurred\n */\nfunction decodeEvent0(clientX, clientY, numDays, startHour, endHour) {\n    const calendar = document.getElementById(\"event-calendar\");\n    const boundingBox = calendar.getBoundingClientRect();\n\n    // x is px for days\n    const x = clientX - boundingBox.left; //x position within the element.\n\n    // y is px for hours\n    const y = clientY - boundingBox.top;\n\n    if(x < 0 || y < 0)\n        return undefined;\n\n    const numHours = endHour - startHour;\n\n    const minuteIntervals = Math.floor(y / boundingBox.height * numHours * 12);\n    const hours = Math.floor(minuteIntervals / 12);\n    const minutes = 5 * (minuteIntervals % 12);\n\n    const gridCol = Math.floor(x / boundingBox.width * numDays);\n\n    return setHours(setMinutes(setSeconds(setDay(new Date(), gridCol + 1), 0), minutes), hours + startHour);\n}\n\n/**\n * Returns hour and day relative to top of target element\n */\n\nexport function decodeEventRespectElement(evt, numDays, startHour, endHour) {\n    const data = JSON.parse(evt.dataTransfer.getData('text'));\n    const droppedEl = document.getElementById(data.id);\n    let newY = evt.clientY + droppedEl.getBoundingClientRect().top - data.mouseY;\n\n    return decodeEvent0(evt.clientX, newY, numDays, startHour, endHour);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport \"./InputLayer.css\";\n\nexport class InputLayer extends React.PureComponent {\n\n    render() {\n        return (\n            <div className=\"input-layer\"\n                 onDoubleClick={this.props.onDoubleClick}\n                 onDrop={this.props.onEventDrop}\n                 onDragOver={this.props.onEventDragOver}\n            />\n        );\n    }\n}\n\nInputLayer.defaultProps = {\n    onDoubleClick: () => {\n    },\n    onEventDrop: () => {\n    },\n    onEventDragOver: (e) => e.preventDefault(),\n};\n\nInputLayer.propTypes = {\n    onDoubleClick: PropTypes.func,\n    onEventDrop: PropTypes.func,\n};\n","import React from 'react';\nimport \"./Resizable.css\";\nimport PropTypes from 'prop-types';\n\nexport const END = \"end\";\nexport const START = \"start\";\n\nexport class Resizable extends React.PureComponent {\n\n    startResize(e) {\n        this.props.onResize(e, START);\n    }\n\n    endResize(e) {\n        this.props.onResize(e, END);\n    }\n\n    getStartResize() {\n        return (\n            <div draggable={true}\n                    className=\"resize-widget resize-widget-start\"\n                    onDrag={this.startResize.bind(this)}\n                    onDragOver={this.props.onDragOver.bind(this)}\n                    onDrop={this.props.onDrop.bind(this)}\n            />\n        )\n    }\n\n    getEndResize() {\n                console.log(this.props);\n        return (\n            <div draggable={true}\n                    className=\"resize-widget resize-widget-end\"\n                    onDrag={this.endResize.bind(this)}\n                    onDragOver={this.props.onDragOver.bind(this)}\n                    onDrop={this.props.onDrop.bind(this)}\n            />\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"resize-context\">\n                {this.getStartResize()}\n                {this.props.children}\n                {this.getEndResize()}\n            </div>\n        )\n    }\n}\n\nResizable.defaultProps = {\n    onResize: () => {\n    },\n    onDrop: () => {\n    },\n    onDragOver: () => {\n    }\n};\n\nResizable.propTypes = {\n    onResize: PropTypes.func,\n    onDrop: PropTypes.func,\n    onDragOver: PropTypes.func\n};\n","/**\n * Event layer outer inator!!\n *\n * Will lay out events in the given column\n **/\n\nimport {differenceInMinutes, getDay, isBefore} from 'date-fns';\nimport className from 'classnames';\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {Resizable} from \"../../../../resize/Resizable\";\n\nconst NUM_DAYS = 5;\nconst INTERVALS = 5;\nconst INTERVALS_PER_HOUR = 60 / INTERVALS;\n\nexport class EventLayerOuterInator extends React.PureComponent {\n\n    /**\n     * Returns the event column style inside a day\n     *\n     * e.g\n     * Given E1, E2, E3, E4 we calculate such that the result is:\n     *\n     * E1 E2 E3\n     * E1 E2\n     * E1 E4 E4\n     *\n     * This method handles the internal styling of each event so the grid works out\n     */\n    getEventColumnStyle(event, eventColumnMap, columnIndex) {\n        // start endIndex one more than column index because if\n        // we start with column index, it will immediately conflict with itself\n        // in its own column\n        let endIndex = columnIndex + 1;\n        for (; endIndex < eventColumnMap.length; endIndex++) {\n            const eventsPerColumn = eventColumnMap[endIndex];\n\n            // check if events in the next column are contained by our current column\n            // if so, then we cannot extend our current event anymore so return early\n            if (eventsPerColumn.some((e) => this.isContainedBy(e, event))) {\n                return {\n                    gridColumn: `${columnIndex + 1}/${endIndex}`\n                };\n            }\n        }\n\n        // event can extend all the way to the end because no events were contained by it\n        return {\n            gridColumn: `${columnIndex + 1}/${eventColumnMap.length + 1}`\n        };\n    }\n\n    /**\n     * Gets the styling for the events, including row style and column style\n     */\n    getEventStyle(event, eventColumnMap, columnIndex) {\n        const eventStart = event.start;\n        const eventEnd = event.end;\n        const gridColPos = this.getEventColumnStyle(event, eventColumnMap, columnIndex);\n\n        const startTime5MinuteIntervals = Math.floor((eventStart.getHours() - this.props.startHour) * INTERVALS_PER_HOUR)\n            + Math.floor(eventStart.getMinutes() / INTERVALS) + 1;\n        const endTime5MinuteIntervals = Math.floor((eventEnd.getHours() - this.props.startHour) * INTERVALS_PER_HOUR)\n            + Math.floor(eventEnd.getMinutes() / INTERVALS) + 1;\n\n        return {\n            gridRow: `${startTime5MinuteIntervals}/${endTime5MinuteIntervals}`,\n            ...gridColPos,\n        };\n    }\n\n    /**\n     * Returns whether evt1 is contained by evt2\n     */\n    isContainedBy(evt1, evt2) {\n        return isBefore(evt2.start, evt1.start) && isBefore(evt1.end, evt2.end);\n    }\n\n    /**\n     * Returns an array of lists where the indices represent the days and the lists are the events for that specific day\n     */\n    getEventsByDays() {\n        const ret = new Array(NUM_DAYS);\n        for (let event of this.props.events) {\n            // arrays start at 0 so subtract 1 from it since Monday is 1 when I want it to be 0\n            let day = getDay(event.start) - 1;\n            if (!ret[day]) {\n                ret[day] = [];\n            }\n            ret[day].push(event);\n        }\n        return ret;\n    }\n\n    /**\n     * Takes an array of events per a day, for example all events for Monday and then arranges them such that\n     * they would be most optimally shown in columns in the case that some of them may collide\n     *\n     * e.g.\n     *\n     * E1 E2\n     *    E2\n     *\n     * Would return an array with two elements for the two columns, and each column would have a list of events\n     * for them.\n     *\n     * @param events array of events per a day\n     */\n    getEventColumnMap(events) {\n        // columns is a 2D array storing lists of events per column\n        let columns = [];\n\n        // for each event we will determine what column we should put it in\n        for (let event of events) {\n            let curColumn = null;\n\n            // loop over the existing columns\n            for (let column of columns) {\n                if (column.length === 0) {\n                    break;\n                }\n\n                // if the given event is not contained by any of the events in the column\n                // then we can safely place down the event in that column\n                let shouldPlaceInCol = column.every((eventPerColumn) => !this.isContainedBy(event, eventPerColumn));\n\n                if (shouldPlaceInCol) {\n                    curColumn = column;\n                    break;\n                }\n            }\n\n            if (curColumn) {\n                curColumn.push(event);\n            } else {\n                columns.push([event]);\n            }\n        }\n        return columns;\n    }\n\n    /**\n     * Returns divs for each events with the correct row/col start, row/end end\n     */\n    layoutEventsPerDay(eventColumnMap) {\n        const ret = [];\n\n        for (let column = 0; column < eventColumnMap.length; column++) {\n            const eventsPerColumn = eventColumnMap[column];\n\n            for (let evt of eventsPerColumn) {\n                const style = this.getEventStyle(evt, eventColumnMap, column);\n                const classNames = className(this.props.eventClassName, \"event-wrapper\");\n\n                // user will determine what kind of component to render based on the information given here\n                const eventObj = Object.assign({}, evt, {\n                    key: evt.start.toString() + evt.end.toString(),\n                    onEventDrag: this.props.onEventDrag.bind(this),\n                    onEventDrop: this.props.onEventDrop.bind(this),\n                    onEventDragStart: this.props.onEventDragStart.bind(this),\n                    onEventDragOver: this.props.onEventDragOver.bind(this),\n                    onEventResize: (e, position) => this.props.onEventResize(e, evt.id, position)\n                });\n\n                ret.push(\n                    <div key={evt.id} style={style} className={classNames}>\n                        <Resizable onResize={(e, position) => this.props.onEventResize(e, evt.id, position)}\n                                   onDrop={this.props.onEventDrop.bind(this)}\n                                   onDragOver={this.props.onEventDragOver.bind(this)}>\n                            {this.props.getEvent(eventObj)}\n                        </Resizable>\n                    </div>\n                );\n            }\n        }\n        return ret;\n    }\n\n    getDayStyle(column) {\n        const earliestHour = this.props.startHour;\n        const latestHour = this.props.endHour;\n\n        const diff = latestHour - earliestHour;\n        const diffIn5MinuteIntervals = diff * INTERVALS_PER_HOUR;\n\n        return {\n            display: \"grid\",\n            gridTemplateColumns: `repeat(${column}, ${100 / column}%)`,\n            gridTemplateRows: `repeat(${diffIn5MinuteIntervals}, 1fr)`,\n        };\n    }\n\n    /**\n     * Sort events by duration - longest duration first\n     */\n    sortEvents(events) {\n        return events.sort((e1, e2) => {\n            let e1duration = differenceInMinutes(e1.start, e1.end);\n            let e2duration = differenceInMinutes(e2.start, e2.end);\n\n            return e1duration - e2duration;\n        });\n    }\n\n    layout() {\n        const ret = [];\n        let eventsByDay = this.getEventsByDays();\n\n        let idx = 0;\n        for (let eventsPerDay of eventsByDay) {\n            idx++;\n            if (eventsPerDay) {\n                // maps for a specific day how many columns are needed to represent them with conflicts\n                // so the first column has X events, the second has Y events and so on, and each\n                // event should be rendered in its respective column within the certain day\n                const sortedEvents = this.sortEvents(eventsPerDay);\n                const eventColumnMap = this.getEventColumnMap(sortedEvents);\n                let styledEvents = this.layoutEventsPerDay(eventColumnMap);\n\n                const styledDays = (\n                    <div key={idx} style={this.getDayStyle(eventColumnMap.length)}>\n                        {styledEvents}\n                    </div>\n                );\n                ret.push(styledDays);\n            } else {\n                ret.push(<div key={idx}/>);\n            }\n        }\n        return ret;\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.layout()}\n            </React.Fragment>\n        );\n    }\n}\n\nEventLayerOuterInator.propTypes = {\n    name: PropTypes.string.isRequired,\n    eventClassName: PropTypes.string,\n    getEvent: PropTypes.func,\n\n    events: PropTypes.array.isRequired,\n    startHour: PropTypes.number.isRequired,\n    endHour: PropTypes.number.isRequired,\n    numDays: PropTypes.number.isRequired,\n\n    onEventDrag: PropTypes.func,\n    onEventDrop: PropTypes.func,\n    onEventResize: PropTypes.func,\n    onEventDragStart: PropTypes.func,\n    onEventDragOver: PropTypes.func,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport \"./EventLayer.css\";\nimport {EventLayerOuterInator} from \"./layout/EventLayerOuter\";\n\nexport class EventLayer extends React.PureComponent {\n    onEventDrag(id, evt) {\n        this.props.onEventDrag(evt, id, this.props.name);\n    }\n\n    onEventDragOver(e) {\n        e.stopPropagation();\n        e.preventDefault();\n    }\n\n    onEventDragStart(e) {\n        e.dataTransfer.setData('text', JSON.stringify({\n            mouseY: e.clientY,\n            id: e.target.id\n        }));\n    }\n\n    getEventCalendarStyle() {\n        return {\n            gridTemplateColumns: `repeat(${this.props.numDays}, minmax(20px, 1fr))`\n        }\n    }\n\n    render() {\n        const props = Object.assign({}, this.props, {\n            // redefine prop functions with current functions which have bounded arguments\n            onEventDrag: this.onEventDrag.bind(this),\n            onEventDragOver: this.onEventDragOver.bind(this),\n            onEventDragStart: this.onEventDragStart.bind(this)\n        });\n\n        // can just pass down the props\n        const styledEvents = (\n            <EventLayerOuterInator {...props} />\n        );\n\n        return (\n            <div style={this.getEventCalendarStyle()} className=\"event-layer\">\n                {styledEvents}\n            </div>\n        )\n    }\n}\n\nEventLayer.defaultProps = {\n    onEventDrag: () => {\n    },\n    onEventResize: () => {\n    },\n    onEventDrop: () => {\n    },\n};\n\nEventLayer.propTypes = {\n    name: PropTypes.string.isRequired,\n    eventClassName: PropTypes.string,\n\n    events: PropTypes.array.isRequired,\n    startHour: PropTypes.number.isRequired,\n    endHour: PropTypes.number.isRequired,\n    numDays: PropTypes.number.isRequired,\n\n    onEventDrag: PropTypes.func,\n    onEventDrop: PropTypes.func,\n    onEventResize: PropTypes.func\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport \"./EventCalendar.css\";\nimport {DayLayer} from \"../layers/day/DayLayer\";\nimport {HourLayer} from \"../layers/hour/HourLayer\";\nimport {decodeEvent, decodeEventRespectElement} from \"../../decoder/MouseDecoder\";\nimport {InputLayer} from \"../layers/input/InputLayer\";\nimport {EventLayer} from \"../layers/event/EventLayer\";\n\nconst RESIZE = \"resize\";\nconst DRAG = \"drag\";\n\nexport class EventCalendar extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            draggedEvent: null,\n            dragType: null,\n            dragLayer: null\n        }\n    }\n\n    /**\n     * Called when a user clicks anywhere on the event calendar\n     * @param evt the click event\n     */\n    onDoubleClick(evt) {\n        const timeClickedOn = decodeEvent(evt, this.props.numDays, this.props.startHour, this.props.endHour);\n\n        if (this.props.onDoubleClick)\n            this.props.onDoubleClick(timeClickedOn);\n    }\n\n    /**\n     * Called when a user starts dragging an event on the event calendar anywhere\n     * @param evt the drag event\n     * @param key the unique key for the given event\n     * @param layerName the name of which layer the event should be dragged on\n     */\n    onEventDrag(evt, key, layerName) {\n        this.setState({draggedEvent: key, dragType: DRAG, dragLayer: layerName});\n    }\n\n    onEventDrop(evt) {\n        if (this.state.dragType !== DRAG)\n            return;\n\n        try {\n            const timeEventDroppedOn = decodeEventRespectElement(evt, this.props.numDays, this.props.startHour, this.props.endHour);\n\n            // we know it is a drag event event if the second part of conditional is not null (no typos here)\n            if (this.props.onEventDrop && this.state.draggedEvent && timeEventDroppedOn)\n                this.props.onEventDrop(this.state.draggedEvent, this.state.dragLayer, timeEventDroppedOn);\n        } catch(error)  {\n            console.warn(error);\n        }\n    }\n\n    onEventResize(evt, key, typeResize) {\n        // should add a delay here so this doesn't get called so often\n        this.setState({draggedEvent: key, dragType: RESIZE});\n        const timeEventDroppedOn = decodeEvent(evt, this.props.numDays, this.props.startHour, this.props.endHour);\n\n        if (timeEventDroppedOn && this.props.onEventResize)\n            this.props.onEventResize(key, timeEventDroppedOn, typeResize);\n\n        evt.stopPropagation();\n    }\n\n    getEventCalendarWrapperStyle() {\n        return {\n            position: \"relative\",\n            gridColumn: `2 / ${this.props.numDays + 2}`,\n            gridRow: `2 / ${this.props.endHour - this.props.startHour + 2}`\n        }\n    }\n\n    render() {\n        // TODO allow them to pass in an object mapping layername to layer properties such as events, classnames etc\n        const eventLayers = this.props.layers.map(layer => {\n            return (\n                <EventLayer key={layer.name}\n                            eventClassName={layer.eventClassName}\n                            getEvent={this.props.getEvent}\n\n                            name={layer.name}\n                            events={layer.events}\n                            startHour={this.props.startHour}\n                            endHour={this.props.endHour}\n                            numDays={this.props.numDays}\n\n                            onEventDrag={this.onEventDrag.bind(this)}\n                            onEventDrop={this.onEventDrop.bind(this)}\n                            onEventResize={this.onEventResize.bind(this)}\n                />\n            )\n        });\n\n        return (\n            <div id=\"event-calendar\" style={this.getEventCalendarWrapperStyle()}>\n                <HourLayer startHour={this.props.startHour} endHour={this.props.endHour}/>\n                <DayLayer numDays={this.props.numDays}/>\n                <InputLayer\n                    onDoubleClick={this.onDoubleClick.bind(this)}\n                    onEventDrop={this.onEventDrop.bind(this)}/>\n\n                {eventLayers}\n            </div>\n        )\n    }\n}\n\nEventCalendar.propTypes = {\n    onEventDrop: PropTypes.func,\n    onEventResize: PropTypes.func,\n    onDoubleClick: PropTypes.func,\n    startHour: PropTypes.number.isRequired,\n    endHour: PropTypes.number.isRequired,\n    numDays: PropTypes.number.isRequired,\n    layers: PropTypes.arrayOf(PropTypes.shape({\n        name: PropTypes.string,\n        events: PropTypes.arrayOf(PropTypes.object),\n        eventClassName: PropTypes.string\n    })),\n};\n","import React from 'react';\nimport \"./DayBar.css\";\nimport PropTypes from 'prop-types';\nimport {startOfWeek, addDays, format} from \"date-fns\";\n\nexport class DayBar extends React.PureComponent {\n\n    getDayBarStyle() {\n        return {\n            gridTemplateColumns: `min-content repeat(${this.props.numDays}, 1fr)`\n        };\n    }\n\n    getDayStyle(start) {\n        return {\n            gridColumn: `${start} / ${start+1}`\n        };\n    }\n\n    getDays() {\n        const ret = [];\n        let curDay = startOfWeek(new Date(), {weekStartsOn: 1});\n        for (let i = 0; i < this.props.numDays; i++) {\n            const dayStr = format(curDay, \"ddd\");\n            curDay = addDays(curDay, 1);\n            ret.push(\n                <div key={dayStr} className=\"day\" style={this.getDayStyle(i + 2)}>\n                    {dayStr}\n                </div>\n            )\n        }\n        return ret;\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.getDays()}\n            </React.Fragment>\n        )\n    }\n}\n\nDayBar.propTypes = {\n    numDays: PropTypes.number.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {HourBar} from \"../../bar/hour/HourBar\";\nimport \"./WeekCalendar.css\";\nimport {EventCalendar} from \"../event/EventCalendar\";\nimport {DayBar} from \"../../bar/day/DayBar\";\n\nconst DEFAULT_MIN_HOUR = 8;\nconst DEFAULT_MAX_HOUR = 20;\n\nconst NUM_DAYS_IN_WEEK = 7;\nconst NUM_DAYS_IN_WORK_WEEK = 5;\n\n\nexport class WeekCalendar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            numDays: props.workWeek ? NUM_DAYS_IN_WORK_WEEK : NUM_DAYS_IN_WEEK,\n        };\n    }\n\n    getMinHour() {\n        if (!this.props.layers)\n            return DEFAULT_MIN_HOUR;\n        let startHours = [].concat(...this.props.layers.map(e => e.events)).map(e => e.start.getHours());\n        // subtracting one to have some more space\n        return Math.max(0, Math.min(...startHours) - 1);\n    }\n\n    getMaxHour() {\n        if (!this.props.layers)\n            return DEFAULT_MAX_HOUR;\n\n        let endHours = [].concat(...this.props.layers.map(e => e.events)).map(e => e.end.getHours());\n        // adding one to have some more space\n        return Math.min(Math.max(...endHours) + 1, 24);\n    }\n\n    getWeekCalendarStyle() {\n        return {\n            // extra 1 for the day bar\n            gridTemplateRows: `min-content repeat(${this.getMaxHour() - this.getMinHour()}, 1fr)`,\n            // extra 1 for the hour bar\n            gridTemplateColumns: `min-content repeat(${this.state.numDays}, 1fr)`\n        }\n    }\n\n    render() {\n        return (\n            <div style={this.getWeekCalendarStyle()} className=\"wc-container\">\n                <DayBar numDays={this.state.numDays}/>\n\n                <HourBar startHour={this.getMinHour()} endHour={this.getMaxHour()}/>\n\n                <EventCalendar startHour={this.getMinHour()}\n                               onEventDrop={this.props.onEventDrop}\n                               onEventResize={this.props.onEventResize}\n                               onDoubleClick={this.props.onCalendarClick}\n                               getEvent={this.props.getEvent}\n                               endHour={this.getMaxHour()}\n                               numDays={this.state.numDays}\n                               layers={this.props.layers}/>\n            </div>\n        )\n    }\n}\n\nWeekCalendar.propTypes = {\n    workWeek: PropTypes.bool.isRequired,\n    layers: PropTypes.arrayOf(PropTypes.shape({\n        name: PropTypes.string,\n        events: PropTypes.arrayOf(PropTypes.object),\n        eventClassName: PropTypes.string\n    })),\n    onCalendarClick: PropTypes.func,\n    onEventDrop: PropTypes.func,\n    onEventResize: PropTypes.func,\n    getEvent: PropTypes.func\n};\n\nWeekCalendar.defaultProps = {\n    workWeek: true,\n    events: []\n};\n","import React from 'react';\nimport {\n    max,\n    addHours,\n    addSeconds,\n    addMinutes,\n    differenceInSeconds,\n    setHours,\n    setMinutes,\n    setSeconds,\n    setMilliseconds,\n    setDay\n} from 'date-fns';\nimport {Event} from \"../calendar/event/Event\";\nimport {WeekCalendar} from \"../calendar/week/WeekCalendar\";\nimport {END, START} from \"../resize/Resizable\";\n\nimport \"./demo.css\";\n\nconst EVENT = \"event\";\nconst PREFERENCE = \"preference\";\n\nexport class Demo extends React.PureComponent {\n\n    getEvent(props) {\n        return (\n            <Event {...props}/>\n        )\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            numCreated: 0,\n            events: [\n                {\n                    id: \"event1\",\n                    start: setDay(setMilliseconds(setSeconds(setMinutes(setHours(new Date(), 8), 0), 0), 0), 2),\n                    end: setDay(setMilliseconds(setSeconds(setMinutes(setHours(new Date(), 20), 0), 0), 0), 2)\n                },\n                {\n                    id: \"event2\",\n                    start: setDay(setMilliseconds(setSeconds(setMinutes(setHours(new Date(), 10), 30), 0), 0), 3),\n                    end: setDay(setMilliseconds(setSeconds(setMinutes(setHours(new Date(), 12), 50), 0), 0), 3)\n                },\n                {\n                    id: \"event3\",\n                    start: setDay(setMilliseconds(setSeconds(setMinutes(setHours(new Date(), 16), 20), 0), 0), 5),\n                    end: setDay(setMilliseconds(setSeconds(setMinutes(setHours(new Date(), 20), 30), 0), 0), 5)\n                },\n                {\n                    id: \"event4\",\n                    start: setDay(setMilliseconds(setSeconds(setMinutes(setHours(new Date(), 5), 20), 0), 0), 5),\n                    end: setDay(setMilliseconds(setSeconds(setMinutes(setHours(new Date(), 7), 30), 0), 0), 5)\n                },\n                {\n                    id: \"event5\",\n                    start: setDay(setMilliseconds(setSeconds(setMinutes(setHours(new Date(), 11), 0), 0), 0), 1),\n                    end: setDay(setMilliseconds(setSeconds(setMinutes(setHours(new Date(), 12), 20), 0), 0), 1)\n                },\n                {\n                    id: \"event6\",\n                    start: setDay(setMilliseconds(setSeconds(setMinutes(setHours(new Date(), 22), 0), 0), 0), 3),\n                    end: setDay(setMilliseconds(setSeconds(setMinutes(setHours(new Date(), 23), 20), 0), 0), 3)\n                },\n            ],\n            preferences: [\n                {\n                    id: \"preference1\",\n                    start: setDay(setMilliseconds(setSeconds(setMinutes(setHours(new Date(), 13), 0), 0), 0), 2),\n                    end: setDay(setMilliseconds(setSeconds(setMinutes(setHours(new Date(), 15), 0), 0), 0), 2)\n                },\n                {\n                    id: \"preference2\",\n                    start: setDay(setMilliseconds(setSeconds(setMinutes(setHours(new Date(), 5), 30), 0), 0), 3),\n                    end: setDay(setMilliseconds(setSeconds(setMinutes(setHours(new Date(), 7), 50), 0), 0), 3)\n                },\n            ]\n        }\n    }\n\n    onEventDrop(droppedEventId, layerName, timeEventDroppedOn) {\n        let dropType = EVENT;\n        let droppedEvent = this.state.events.filter((evt) => evt.id === droppedEventId)[0];\n        if (!droppedEvent) {\n            droppedEvent = this.state.preferences.filter((evt) => evt.id === droppedEventId)[0];\n            dropType = PREFERENCE;\n        }\n\n        const secondsDiff = differenceInSeconds(droppedEvent.end, droppedEvent.start);\n\n        const newEvent = Object.assign({}, droppedEvent);\n\n        newEvent.start = timeEventDroppedOn;\n        newEvent.end = addSeconds(timeEventDroppedOn, secondsDiff);\n\n        if (newEvent.start.getDay() !== newEvent.end.getDay())\n            return;\n\n        if (dropType === EVENT) {\n            const eventsWithoutDroppedEvent = this.state.events.filter((evt) => evt.id !== droppedEventId);\n            this.setState({\n                events: [...eventsWithoutDroppedEvent, newEvent]\n            });\n        } else {\n            const preferencesWithoutDroppedEvent = this.state.preferences.filter((evt) => evt.id !== droppedEventId);\n            this.setState({\n                preferences: [...preferencesWithoutDroppedEvent, newEvent]\n            });\n        }\n    }\n\n    onEventResize(droppedEventId, timeEventResizedTo, typeResize) {\n        let dropType = EVENT;\n        let droppedEvent = this.state.events.filter((evt) => evt.id === droppedEventId)[0];\n        if (!droppedEvent) {\n            droppedEvent = this.state.preferences.filter((evt) => evt.id === droppedEventId)[0];\n            dropType = PREFERENCE;\n        }\n\n        const minVal = addMinutes(droppedEvent.start, 30);\n\n        const newEvent = Object.assign({}, droppedEvent);\n\n        if (newEvent.start.getDay() !== newEvent.end.getDay())\n            return;\n\n        if (newEvent.start.getDay() !== timeEventResizedTo.getDay())\n            return;\n\n        if (typeResize === END) {\n            newEvent.end = max(minVal, timeEventResizedTo);\n        } else if (typeResize === START) {\n            newEvent.start = timeEventResizedTo;\n        }\n\n        if (dropType === EVENT) {\n            const eventsWithoutDroppedEvent = this.state.events.filter((evt) => evt.id !== droppedEventId);\n            this.setState({\n                events: [...eventsWithoutDroppedEvent, newEvent]\n            });\n        } else {\n            const preferencesWithoutDropEvent = this.state.preferences.filter((evt) => evt.id !== droppedEventId);\n            this.setState({\n                preferences: [...preferencesWithoutDropEvent, newEvent]\n            });\n        }\n    }\n\n    onCalendarClick(timeClickedOn) {\n        const start = timeClickedOn;\n        const end = addHours(timeClickedOn, 1);\n\n        if (start.getDay() !== end.getDay())\n            return;\n\n        const newEvent = {id: \"created-event\" + this.state.numCreated, start: start, end: end};\n        this.setState({numCreated: this.state.numCreated + 1, events: [...this.state.events, newEvent]});\n    }\n\n\n    render() {\n        const eventComponents = this.state.events;\n        const preferenceComponents = this.state.preferences;\n\n        const layers = [\n            {name: EVENT, events: eventComponents, eventClassName: EVENT},\n            {name: PREFERENCE, events: preferenceComponents, eventClassName: PREFERENCE}\n        ];\n\n        return (\n            <WeekCalendar layers={layers}\n                          getEvent={this.getEvent.bind(this)}\n                          onCalendarClick={this.onCalendarClick.bind(this)}\n                          onEventDrop={this.onEventDrop.bind(this)}\n                          onEventResize={this.onEventResize.bind(this)}/>\n        )\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport {Demo} from \"./demo/demo\";\n\n\nReactDOM.render(\n    <div style={{height: \"100%\", padding: \"10em\"}}>\n        <Demo />\n    </div>\n    , document.getElementById('root'));\n\n"],"sourceRoot":""}
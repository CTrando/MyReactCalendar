{"version":3,"sources":["calendar/event/Event.js","bar/hour/HourBar.js","Constants.js","calendar/layers/day/DayLayer.js","calendar/layers/hour/HourLayer.js","decoder/MouseDecoder.js","calendar/layers/input/InputLayer.js","resize/Resizable.js","calendar/layers/event/layout/EventLayerOuter.js","calendar/layers/event/EventLayer.js","calendar/event/EventCalendar.js","bar/day/DayBar.js","calendar/week/WeekCalendar.js","demo/demo.js","demo.js"],"names":["Event","React","PureComponent","constructor","props","super","this","state","editing","render","formatStr","format","start","end","react_default","a","createElement","id","key","toString","draggable","onDrag","onEventDrag","bind","onDrop","onEventDrop","onDragStart","onEventDragStart","onDragOver","onEventDragOver","style","height","onDoubleClick","e","setState","propTypes","PropTypes","string","isRequired","instanceOf","Date","func","onEventResize","HourBar","getHourBarStyle","display","gridTemplateRows","endHour","startHour","getHourStyle","gridRow","getHours","ret","curTime","setMinutes","i","setHours","hourTime","push","Fragment","className","number","DEFAULT_START_HOUR","DEFAULT_END_HOUR","DayLayer","getDayLines","numDays","getDayStyle","gridTemplateColumns","defaultProps","HourLayer","getHourLines","getHourLinesStyle","decodeEvent","evt","decodeEvent0","clientX","clientY","boundingBox","document","getElementById","getBoundingClientRect","x","left","y","top","console","error","numHours","minuteIntervals","Math","floor","hours","minutes","gridCol","width","setSeconds","setDay","InputLayer","preventDefault","END","START","Resizable","startResize","onResize","endResize","getStartResize","active","getEndResize","children","bool","NUM_DAYS","INTERVALS","INTERVALS_PER_HOUR","EventLayerOuterInator","getEventColumnStyle","event","eventColumnMap","columnIndex","endIndex","length","some","isContainedBy","gridColumn","getEventStyle","eventStart","eventEnd","gridColPos","getMinutes","evt1","evt2","isBefore","getEventsByDays","Array","events","day","getDay","layoutEventsIntoColumns","columns","curColumn","column","every","eventPerColumn","hydrateEvent","Object","assign","position","styleEventsInColumns","eventsPerColumn","classNames","eventClassName","hydratedEvt","userComponent","getEvent","Resizable_Resizable","earliestHour","sortEvents","sort","e1","e2","differenceInMinutes","layoutEventsIntoDays","eventsByDay","idx","eventsPerDay","sortedEvents","styledEvents","styledDays","name","array","EventLayer","getEventCalendarStyle","EventLayerOuter_EventLayerOuterInator","stopPropagation","dataTransfer","setData","JSON","stringify","mouseY","target","RESIZE","DRAG","EventCalendar","draggedEvent","dragType","dragLayer","onCalendarClick","timeClickedOn","layerName","timeEventDroppedOn","data","parse","getData","droppedEl","newY","decodeEventRespectElement","warn","resizeType","getEventCalendarWrapperStyle","eventLayers","layers","map","layer","EventLayer_EventLayer","HourLayer_HourLayer","DayLayer_DayLayer","InputLayer_InputLayer","arrayOf","shape","object","DayBar","getDayBarStyle","getDays","curDay","startOfWeek","weekStartsOn","dayStr","addDays","NUM_DAYS_IN_WEEK","NUM_DAYS_IN_WORK_WEEK","WeekCalendar","workWeek","getMinHour","startHours","concat","max","min","getMaxHour","endHours","getWeekCalendarStyle","DayBar_DayBar","HourBar_HourBar","EventCalendar_EventCalendar","EVENT","PREFERENCE","ReactDOM","padding","Event_Event","numCreated","setMilliseconds","preferences","droppedEventId","dropType","droppedEvent","filter","secondsDiff","differenceInSeconds","newEvent","addSeconds","eventsWithoutDroppedEvent","preferencesWithoutDroppedEvent","timeEventResizedTo","minVal","addMinutes","preferencesWithoutDropEvent","addHours","eventComponents","preferenceComponents","WeekCalendar_WeekCalendar"],"mappings":"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","file":"static/js/main.0849d000.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {format} from 'date-fns';\n\nexport class Event extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            editing: false\n        }\n    }\n\n    /**\n     * Returns a renderable react component\n     */\n    render() {\n        const startFormatted = format(this.props.start, 'h:mma');\n        const endFormatted = format(this.props.end, 'h:mma');\n\n        const formatStr = `${startFormatted}-${endFormatted}`;\n\n        return (\n            <div\n                id={`${this.props.id}-drag`}\n                key={this.props.start.toString() + this.props.end.toString()}\n\n                draggable={true}\n                onDrag={this.props.onEventDrag.bind(this, this.props.id)}\n                onDrop={this.props.onEventDrop.bind(this)}\n                // setting data onto dataTransfer so that can recognize what div was dragged on drop\n                onDragStart={this.props.onEventDragStart.bind(this)}\n                onDragOver={this.props.onEventDragOver.bind(this)}\n                style={{height: \"100%\"}}>\n\n                <div onDoubleClick={(e) => this.setState({editing: true})}\n                     style={{height: \"100%\"}}>\n                    {this.state.editing && <div>hello </div>}\n                    <div>{formatStr}</div>\n                </div>\n            </div>\n        )\n    }\n}\n\nEvent.propTypes = {\n    id: PropTypes.string.isRequired,\n    start: PropTypes.instanceOf(Date).isRequired,\n    end: PropTypes.instanceOf(Date).isRequired,\n\n    onEventDrag: PropTypes.func.isRequired,\n    onEventDrop: PropTypes.func.isRequired,\n    onEventDragStart: PropTypes.func.isRequired,\n    onEventDragOver: PropTypes.func.isRequired,\n    onEventResize: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport \"./HourBar.css\";\n\nimport {format} from \"date-fns\";\n\nexport class HourBar extends React.PureComponent {\n\n    getHourBarStyle() {\n        const hours = this.props.endHour - this.props.startHour;\n\n        return {\n            display: \"grid\",\n            gridTemplateRows: `repeat(${hours}, 1fr)`,\n            height: \"100%\",\n        };\n    }\n\n    getHourStyle(start) {\n        return {\n            gridRow: `${start} / ${start + 1}`\n        };\n    }\n\n    getHours() {\n        const ret = [];\n        const curTime = new Date();\n        curTime.setMinutes(0, 0, 0);\n\n        for (let i = this.props.startHour; i < this.props.endHour; i++) {\n            curTime.setHours(i);\n            const hourTime = format(curTime, \"ha\");\n            ret.push((\n                <React.Fragment key={hourTime}>\n                    <div key={hourTime} style={this.getHourStyle(i - this.props.startHour + 2)}\n                         className=\"hour-step-container\">\n                        <div>\n                            {hourTime}\n                        </div>\n                    </div>\n                </React.Fragment>\n            ));\n        }\n        return ret;\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.getHours()}\n            </React.Fragment>\n        );\n    }\n}\n\nHourBar.propTypes = {\n    startHour: PropTypes.number.isRequired,\n    endHour: PropTypes.number.isRequired\n};\n","export const DEFAULT_START_HOUR = 8;\nexport const DEFAULT_END_HOUR = 20;\nexport const DEFAULT_NUM_DAYS = 5;\n","import React from 'react';\nimport \"./DayLayer.css\";\nimport PropTypes from 'prop-types';\nimport {DEFAULT_NUM_DAYS} from \"../../../Constants\";\n\n/**\n * Renders the borders for the days\n */\nexport class DayLayer extends React.PureComponent {\n\n    getDayLines() {\n        const ret = [];\n        for (let i = 0; i < this.props.numDays; i++) {\n            ret.push((\n                <div key={i + \"day-line\"} className=\"day-line\"/>\n            ))\n        }\n        return ret;\n    }\n\n    getDayStyle() {\n        return {\n            gridTemplateColumns: `repeat(${this.props.numDays}, 1fr)`,\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"day-layer\" style={this.getDayStyle()}>\n                {this.getDayLines()}\n            </div>\n        );\n    }\n}\n\nDayLayer.propTypes = {\n    numDays: PropTypes.number.isRequired\n};\n\nDayLayer.defaultProps = {\n    numDays: DEFAULT_NUM_DAYS\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport \"./HourLayer.css\"\nimport {DEFAULT_END_HOUR, DEFAULT_START_HOUR} from \"../../../Constants\";\n\n/**\n * Renders the borders for the hours\n */\nexport class HourLayer extends React.PureComponent {\n    getHourLines() {\n        const ret = [];\n        for (let i = this.props.startHour; i < this.props.endHour; i++) {\n            const hourTime = `${i}:00`;\n            ret.push((\n                <div key={hourTime + \"hour-line\"}\n                     className=\"hour-line\"/>\n            ))\n        }\n        return ret;\n    }\n\n    getHourLinesStyle() {\n        const hours = this.props.endHour - this.props.startHour;\n        return {\n            gridTemplateRows: `repeat(${hours}, 1fr)`,\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"hour-layer\" style={this.getHourLinesStyle()}>\n                {this.getHourLines()}\n            </div>\n        );\n    }\n}\n\nHourLayer.propTypes = {\n    startHour: PropTypes.number.isRequired,\n    endHour: PropTypes.number.isRequired\n};\n\nHourLayer.defaultProps = {\n    startHour: DEFAULT_START_HOUR,\n    endHour: DEFAULT_END_HOUR,\n};\n","import {setHours, setMinutes, setSeconds, setDay} from 'date-fns';\n\nexport function decodeEvent(evt, numDays, startHour, endHour) {\n    return decodeEvent0(evt, evt.clientX, evt.clientY, numDays, startHour, endHour);\n}\n\n/**\n * Returns the hour and day of where the click occurred\n */\nfunction decodeEvent0(evt, clientX, clientY, numDays, startHour, endHour) {\n    const calendar = document.getElementById(\"event-calendar\");\n    const boundingBox = calendar.getBoundingClientRect();\n\n    // x is px for days\n    const x = clientX - boundingBox.left; //x position within the element.\n\n    // y is px for hours\n    const y = clientY - boundingBox.top;\n\n    if(x < 0 || y < 0) {\n        console.error(\"Somehow could not decode event, event is\" + evt);\n        return undefined;\n    }\n\n    const numHours = endHour - startHour;\n\n    const minuteIntervals = Math.floor(y / boundingBox.height * numHours * 12);\n    const hours = Math.floor(minuteIntervals / 12);\n    const minutes = 5 * (minuteIntervals % 12);\n\n    const gridCol = Math.floor(x / boundingBox.width * numDays);\n\n    return setHours(setMinutes(setSeconds(setDay(new Date(), gridCol + 1), 0), minutes), hours + startHour);\n}\n\n/**\n * Returns hour and day relative to top of target element\n */\n\nexport function decodeEventRespectElement(evt, numDays, startHour, endHour) {\n    const data = JSON.parse(evt.dataTransfer.getData('text'));\n    const droppedEl = document.getElementById(data.id);\n    let newY = evt.clientY + droppedEl.getBoundingClientRect().top - data.mouseY;\n\n    return decodeEvent0(evt, evt.clientX, newY, numDays, startHour, endHour);\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport \"./InputLayer.css\";\n\nexport class InputLayer extends React.PureComponent {\n\n    render() {\n        return (\n            <div className=\"input-layer\"\n                 onDoubleClick={this.props.onDoubleClick}\n                 onDrop={this.props.onEventDrop}\n                 onDragOver={this.props.onEventDragOver}\n            />\n        );\n    }\n}\n\nInputLayer.defaultProps = {\n    onDoubleClick: () => {},\n    onEventDrop: () => {},\n    onEventDragOver: (e) => e.preventDefault(),\n};\n\nInputLayer.propTypes = {\n    onDoubleClick: PropTypes.func,\n    onEventDrop: PropTypes.func,\n};\n","import React from 'react';\nimport \"./Resizable.css\";\nimport PropTypes from 'prop-types';\n\nexport const END = \"end\";\nexport const START = \"start\";\n\nexport class Resizable extends React.PureComponent {\n\n    startResize(e) {\n        this.props.onResize(e, START);\n    }\n\n    endResize(e) {\n        this.props.onResize(e, END);\n    }\n\n    getStartResize() {\n        if (!this.props.active)\n            return null;\n\n        return (\n            <div draggable={true}\n                 key={this.props.id + \"resize-start\"}\n                 className=\"resize-widget resize-widget-start\"\n                 onDragOver={(e) => e.preventDefault()}\n                 onDrag={this.startResize.bind(this)}\n            />\n        )\n    }\n\n    getEndResize() {\n        if (!this.props.active)\n            return null;\n\n        return (\n            <div draggable={true}\n                 key={this.props.id + \"resize-end\"}\n                 className=\"resize-widget resize-widget-end\"\n                 onDragOver={(e) => e.preventDefault()}\n                 onDrag={this.endResize.bind(this)}\n            />\n        )\n    }\n\n    render() {\n        return (\n            <div className=\"resize-context\">\n                {this.getStartResize()}\n                {this.props.children}\n                {this.getEndResize()}\n            </div>\n        )\n    }\n}\n\nResizable.defaultProps = {\n    onResize: () => {\n    },\n    active: true,\n    id: \"test\"\n};\n\nResizable.propTypes = {\n    onResize: PropTypes.func,\n    active: PropTypes.bool,\n    id: PropTypes.string\n};\n","/**\n * Event layer outer inator!!\n *\n * Will lay out events in the given column\n **/\n\nimport {differenceInMinutes, getDay, isBefore} from 'date-fns';\nimport className from 'classnames';\nimport React from \"react\";\nimport PropTypes from 'prop-types';\nimport {Resizable} from \"../../../../resize/Resizable\";\nimport {DEFAULT_END_HOUR, DEFAULT_NUM_DAYS, DEFAULT_START_HOUR} from \"../../../../Constants\";\n\nconst NUM_DAYS = 5;\nconst INTERVALS = 5;\nconst INTERVALS_PER_HOUR = 60 / INTERVALS;\n\nexport class EventLayerOuterInator extends React.PureComponent {\n\n    /**\n     * Returns the event column style inside a day\n     *\n     * e.g\n     * Given E1, E2, E3, E4 we calculate such that the result is:\n     *\n     * E1 E2 E3\n     * E1 E2\n     * E1 E4 E4\n     *\n     * This method handles the internal styling of each event so the grid works out\n     */\n    getEventColumnStyle(event, eventColumnMap, columnIndex) {\n        // start endIndex one more than column index because if\n        // we start with column index, it will immediately conflict with itself\n        // in its own column\n        let endIndex = columnIndex + 1;\n        for (; endIndex < eventColumnMap.length; endIndex++) {\n            const eventsPerColumn = eventColumnMap[endIndex];\n\n            // check if events in the next column are contained by our current column\n            // if so, then we cannot extend our current event anymore so return early\n            if (eventsPerColumn.some((e) => this.isContainedBy(e, event))) {\n                return {\n                    gridColumn: `${columnIndex + 1}/${endIndex}`\n                };\n            }\n        }\n\n        // event can extend all the way to the end because no events were contained by it\n        return {\n            gridColumn: `${columnIndex + 1}/${eventColumnMap.length + 1}`\n        };\n    }\n\n    /**\n     * Gets the styling for the events, including row style and column style\n     */\n    getEventStyle(event, eventColumnMap, columnIndex) {\n        const eventStart = event.start;\n        const eventEnd = event.end;\n        const gridColPos = this.getEventColumnStyle(event, eventColumnMap, columnIndex);\n\n        const startTime5MinuteIntervals = Math.floor((eventStart.getHours() - this.props.startHour) * INTERVALS_PER_HOUR)\n            + Math.floor(eventStart.getMinutes() / INTERVALS) + 1;\n        const endTime5MinuteIntervals = Math.floor((eventEnd.getHours() - this.props.startHour) * INTERVALS_PER_HOUR)\n            + Math.floor(eventEnd.getMinutes() / INTERVALS) + 1;\n\n        return {\n            gridRow: `${startTime5MinuteIntervals}/${endTime5MinuteIntervals}`,\n            ...gridColPos,\n        };\n    }\n\n    /**\n     * Returns whether evt1 is contained by evt2\n     */\n    isContainedBy(evt1, evt2) {\n        return isBefore(evt2.start, evt1.start) && isBefore(evt1.end, evt2.end);\n    }\n\n    /**\n     * Returns an array of lists where the indices represent the days and the lists are the events for that specific day\n     */\n    getEventsByDays() {\n        const ret = new Array(NUM_DAYS);\n        for (let event of this.props.events) {\n            // arrays start at 0 so subtract 1 from it since Monday is 1 when I want it to be 0\n            let day = getDay(event.start) - 1;\n            if (!ret[day]) {\n                ret[day] = [];\n            }\n            ret[day].push(event);\n        }\n        return ret;\n    }\n\n    /**\n     * Takes an array of events per a day, for example all events for Monday and then arranges them such that\n     * they would be most optimally shown in columns in the case that some of them may collide\n     *\n     * e.g.\n     *\n     * E1 E2\n     *    E2\n     *\n     * Would return an array with two elements for the two columns, and each column would have a list of events\n     * for them.\n     *\n     * @param events array of events per a day\n     */\n    layoutEventsIntoColumns(events) {\n        // columns is a 2D array storing lists of events per column\n        let columns = [];\n\n        // for each event we will determine what column we should put it in\n        for (let event of events) {\n            let curColumn = null;\n\n            // loop over the existing columns\n            for (let column of columns) {\n                if (column.length === 0) {\n                    break;\n                }\n\n                // if the given event is not contained by any of the events in the column\n                // then we can safely place down the event in that column\n                let shouldPlaceInCol = column.every((eventPerColumn) => !this.isContainedBy(event, eventPerColumn));\n\n                if (shouldPlaceInCol) {\n                    curColumn = column;\n                    break;\n                }\n            }\n\n            if (curColumn) {\n                curColumn.push(event);\n            } else {\n                columns.push([event]);\n            }\n        }\n        return columns;\n    }\n\n\n    /**\n     * Populates the event object with everything that the user might want to use\n     * to render their component\n     * @param evt\n     * @returns {any}\n     */\n    hydrateEvent(evt) {\n        return Object.assign({}, evt, {\n            key: evt.start.toString() + evt.end.toString(),\n            onEventDrag: this.props.onEventDrag.bind(this),\n            onEventDrop: this.props.onEventDrop.bind(this),\n            onEventDragStart: this.props.onEventDragStart.bind(this),\n            onEventDragOver: this.props.onEventDragOver.bind(this),\n            onEventResize: (e, position) => this.props.onEventResize(e, evt.id, position)\n        });\n    }\n\n    /**\n     * Returns divs for each events with the correct row/col start, row/end end\n     */\n    styleEventsInColumns(eventColumnMap) {\n        const ret = [];\n\n        for (let column = 0; column < eventColumnMap.length; column++) {\n            const eventsPerColumn = eventColumnMap[column];\n\n            for (let evt of eventsPerColumn) {\n                const style = this.getEventStyle(evt, eventColumnMap, column);\n                const classNames = className(this.props.eventClassName, \"event-wrapper\");\n\n                // user will determine what kind of component to render based on the information given here\n                const hydratedEvt = this.hydrateEvent(evt);\n                const userComponent = this.props.getEvent(hydratedEvt);\n\n                ret.push(\n                    <div key={evt.id} style={style} className={classNames}>\n                        <Resizable active={evt.active}\n                                   id={evt.id}\n                                   onResize={(e, position) => this.props.onEventResize(e, evt.id, position)}>\n                            {userComponent}\n                        </Resizable>\n                    </div>\n                );\n            }\n        }\n        return ret;\n    }\n\n    getDayStyle(column) {\n        const earliestHour = this.props.startHour;\n        const latestHour = this.props.endHour;\n\n        const diff = latestHour - earliestHour;\n        const diffIn5MinuteIntervals = diff * INTERVALS_PER_HOUR;\n\n        return {\n            display: \"grid\",\n            gridTemplateColumns: `repeat(${column}, ${100 / column}%)`,\n            gridTemplateRows: `repeat(${diffIn5MinuteIntervals}, 1fr)`,\n        };\n    }\n\n    /**\n     * Sort events by duration - longest duration first\n     */\n    sortEvents(events) {\n        return events.sort((e1, e2) => {\n            let e1duration = differenceInMinutes(e1.start, e1.end);\n            let e2duration = differenceInMinutes(e2.start, e2.end);\n\n            return e1duration - e2duration;\n        });\n    }\n\n    layoutEventsIntoDays() {\n        const ret = [];\n        let eventsByDay = this.getEventsByDays();\n\n        let idx = 0;\n        for (let eventsPerDay of eventsByDay) {\n            idx++;\n            if (eventsPerDay) {\n                // maps for a specific day how many columns are needed to represent them with conflicts\n                // so the first column has X events, the second has Y events and so on, and each\n                // event should be rendered in its respective column within the certain day\n                const sortedEvents = this.sortEvents(eventsPerDay);\n                const eventColumnMap = this.layoutEventsIntoColumns(sortedEvents);\n                let styledEvents = this.styleEventsInColumns(eventColumnMap);\n\n                // put the styled events into one day column\n                const styledDays = (\n                    <div key={idx} style={this.getDayStyle(eventColumnMap.length)}>\n                        {styledEvents}\n                    </div>\n                );\n\n                ret.push(styledDays);\n            } else {\n                // no events push blank column\n                ret.push(<div key={idx}/>);\n            }\n        }\n        return ret;\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.layoutEventsIntoDays()}\n            </React.Fragment>\n        );\n    }\n}\n\nEventLayerOuterInator.propTypes = {\n    name: PropTypes.string.isRequired,\n    eventClassName: PropTypes.string,\n    getEvent: PropTypes.func,\n\n    events: PropTypes.array.isRequired,\n    startHour: PropTypes.number.isRequired,\n    endHour: PropTypes.number.isRequired,\n    numDays: PropTypes.number.isRequired,\n\n    onEventDrag: PropTypes.func,\n    onEventDrop: PropTypes.func,\n    onEventResize: PropTypes.func,\n    onEventDragStart: PropTypes.func,\n    onEventDragOver: PropTypes.func,\n};\n\nEventLayerOuterInator.defaultProps = {\n    name: \"test\",\n    eventClassName: \"\",\n    getEvent: () => {\n    },\n\n    events: [],\n    startHour: DEFAULT_START_HOUR,\n    endHour: DEFAULT_END_HOUR,\n    numDays: DEFAULT_NUM_DAYS,\n\n    onEventDrag: () => {},\n    onEventDrop: () => {},\n    onEventResize: () => {},\n    onEventDragStart: () => {},\n    onEventDragOver: () => {},\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport \"./EventLayer.css\";\nimport {EventLayerOuterInator} from \"./layout/EventLayerOuter\";\n\nexport class EventLayer extends React.PureComponent {\n\n    /**\n     * Called when event is dragged, is a closure that appends the layer name\n     */\n    onEventDrag(id, evt) {\n        this.props.onEventDrag(evt, id, this.props.name);\n    }\n\n    /**\n     * Gets the style for the specific layer\n     */\n    getEventCalendarStyle() {\n        return {\n            gridTemplateColumns: `repeat(${this.props.numDays}, minmax(20px, 1fr))`\n        }\n    }\n\n    render() {\n        const props = Object.assign({}, this.props, {\n            // redefine prop functions with current functions which have bounded arguments\n            onEventDrag: this.onEventDrag.bind(this),\n        });\n\n        // can just pass down the props\n        const styledEvents = (\n            <EventLayerOuterInator {...props} />\n        );\n\n        return (\n            <div style={this.getEventCalendarStyle()} className=\"event-layer\">\n                {styledEvents}\n            </div>\n        )\n    }\n}\n\nEventLayer.defaultProps = {\n    onEventDrag: () => {\n    },\n    onEventResize: () => {\n    },\n    onEventDrop: () => {\n    },\n    onEventDragOver: (e) => {\n        e.stopPropagation();\n        e.preventDefault();\n    },\n    onEventDragStart: (e) => {\n        e.dataTransfer.setData('text', JSON.stringify({\n            mouseY: e.clientY,\n            id: e.target.id\n        }));\n        e.stopPropagation();\n    }\n};\n\nEventLayer.propTypes = {\n    name: PropTypes.string.isRequired,\n    eventClassName: PropTypes.string,\n\n    events: PropTypes.array.isRequired,\n    startHour: PropTypes.number.isRequired,\n    endHour: PropTypes.number.isRequired,\n    numDays: PropTypes.number.isRequired,\n\n    onEventDrag: PropTypes.func,\n    onEventDrop: PropTypes.func,\n    onEventResize: PropTypes.func\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport \"./EventCalendar.css\";\nimport {DayLayer} from \"../layers/day/DayLayer\";\nimport {HourLayer} from \"../layers/hour/HourLayer\";\nimport {decodeEvent, decodeEventRespectElement} from \"../../decoder/MouseDecoder\";\nimport {InputLayer} from \"../layers/input/InputLayer\";\nimport {EventLayer} from \"../layers/event/EventLayer\";\nimport {DEFAULT_END_HOUR, DEFAULT_NUM_DAYS, DEFAULT_START_HOUR} from \"../../Constants\";\n\nconst RESIZE = \"resize\";\nconst DRAG = \"drag\";\n\nexport class EventCalendar extends React.PureComponent {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            draggedEvent: null,\n            dragType: null,\n            dragLayer: null\n        }\n    }\n\n    /**\n     * Called when a user clicks anywhere on the event calendar\n     * @param evt the click event\n     */\n    onCalendarClick(evt) {\n        const timeClickedOn = decodeEvent(evt, this.props.numDays, this.props.startHour, this.props.endHour);\n\n        this.props.onCalendarClick(timeClickedOn);\n    }\n\n    /**\n     * Called when a user starts dragging an event on the event calendar anywhere\n     * @param evt the drag event\n     * @param key the unique key for the given event\n     * @param layerName the name of which layer the event should be dragged on\n     */\n    onEventDrag(evt, key, layerName) {\n        this.setState({draggedEvent: key, dragType: DRAG, dragLayer: layerName});\n    }\n\n    /**\n     * Called when an event is dropped, finds what time the event was dropped on and then\n     * calls callback from props with params\n     * @param evt\n     */\n    onEventDrop(evt) {\n        if (this.state.dragType !== DRAG)\n            return;\n\n        try {\n            const timeEventDroppedOn = decodeEventRespectElement(evt, this.props.numDays, this.props.startHour, this.props.endHour);\n\n            if (this.state.draggedEvent && timeEventDroppedOn)\n                this.props.onEventDrop(this.state.draggedEvent, this.state.dragLayer, timeEventDroppedOn);\n        } catch (error) {\n            console.warn(error);\n        }\n    }\n\n    /**\n     * Calls resize event passed in from props\n     * @param evt the event object\n     * @param key the unique key for the event\n     * @param resizeType whether the resize occurred at the start or the end\n     */\n    onEventResize(evt, key, resizeType) {\n        // TODO consider adding a delay here so this doesn't get called so often\n        this.setState({draggedEvent: key, dragType: RESIZE});\n        const timeEventDroppedOn = decodeEvent(evt, this.props.numDays, this.props.startHour, this.props.endHour);\n\n        if (timeEventDroppedOn && this.props.onEventResize)\n            this.props.onEventResize(key, timeEventDroppedOn, resizeType);\n\n        evt.stopPropagation();\n    }\n\n    /**\n     * Generates the style for the event calendar based on the number of days, start hour and end hour\n     */\n    getEventCalendarWrapperStyle() {\n        return {\n            gridColumn: `2 / ${this.props.numDays + 2}`,\n            gridRow: `2 / ${this.props.endHour - this.props.startHour + 2}`\n        }\n    }\n\n    render() {\n        // TODO support passing in an object mapping layername to layer properties such as events, classnames etc\n        const eventLayers = this.props.layers.map(layer => {\n            return (\n                <EventLayer key={layer.name}\n                            eventClassName={layer.eventClassName}\n                            getEvent={this.props.getEvent}\n\n                            name={layer.name}\n                            events={layer.events}\n                            startHour={this.props.startHour}\n                            endHour={this.props.endHour}\n                            numDays={this.props.numDays}\n\n                            onEventDrag={this.onEventDrag.bind(this)}\n                            onEventDrop={this.onEventDrop.bind(this)}\n                            onEventResize={this.onEventResize.bind(this)}\n                />\n            )\n        });\n\n        return (\n            <div id=\"event-calendar\" className=\"event-calendar\" style={this.getEventCalendarWrapperStyle()}>\n                <HourLayer startHour={this.props.startHour} endHour={this.props.endHour}/>\n                <DayLayer numDays={this.props.numDays}/>\n                <InputLayer\n                    onDoubleClick={this.onCalendarClick.bind(this)}\n                    onEventDrop={this.onEventDrop.bind(this)}/>\n\n                {eventLayers}\n            </div>\n        )\n    }\n}\n\nEventCalendar.propTypes = {\n    startHour: PropTypes.number,\n    endHour: PropTypes.number,\n    numDays: PropTypes.number,\n\n    onEventDrop: PropTypes.func,\n    onEventResize: PropTypes.func,\n    onCalendarClick: PropTypes.func,\n\n    layers: PropTypes.arrayOf(PropTypes.shape({\n        name: PropTypes.string,\n        events: PropTypes.arrayOf(PropTypes.object),\n        eventClassName: PropTypes.string\n    })),\n};\n\nEventCalendar.defaultProps = {\n    startHour: DEFAULT_START_HOUR,\n    endHour: DEFAULT_END_HOUR,\n    numDays: DEFAULT_NUM_DAYS,\n\n    onEventDrop: () => {},\n    onEventResize: () => {},\n    onCalendarClick: () => {},\n\n    layers: []\n};\n","import React from 'react';\nimport \"./DayBar.css\";\nimport PropTypes from 'prop-types';\nimport {startOfWeek, addDays, format} from \"date-fns\";\n\nexport class DayBar extends React.PureComponent {\n\n    getDayBarStyle() {\n        return {\n            gridTemplateColumns: `min-content repeat(${this.props.numDays}, 1fr)`\n        };\n    }\n\n    getDayStyle(start) {\n        return {\n            gridColumn: `${start} / ${start+1}`\n        };\n    }\n\n    getDays() {\n        const ret = [];\n        let curDay = startOfWeek(new Date(), {weekStartsOn: 1});\n        for (let i = 0; i < this.props.numDays; i++) {\n            const dayStr = format(curDay, \"ddd\");\n            curDay = addDays(curDay, 1);\n            ret.push(\n                <div key={dayStr} className=\"day\" style={this.getDayStyle(i + 2)}>\n                    {dayStr}\n                </div>\n            )\n        }\n        return ret;\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {this.getDays()}\n            </React.Fragment>\n        )\n    }\n}\n\nDayBar.propTypes = {\n    numDays: PropTypes.number.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {HourBar} from \"../../bar/hour/HourBar\";\nimport \"./WeekCalendar.css\";\nimport {EventCalendar} from \"../event/EventCalendar\";\nimport {DayBar} from \"../../bar/day/DayBar\";\nimport {DEFAULT_END_HOUR, DEFAULT_START_HOUR} from \"../../Constants\";\n\nconst NUM_DAYS_IN_WEEK = 7;\nconst NUM_DAYS_IN_WORK_WEEK = 5;\n\n\n\nexport class WeekCalendar extends React.PureComponent {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            numDays: props.workWeek ? NUM_DAYS_IN_WORK_WEEK : NUM_DAYS_IN_WEEK,\n        };\n    }\n\n    getMinHour() {\n        if (!this.props.layers)\n            return DEFAULT_START_HOUR;\n        let startHours = [].concat(...this.props.layers.map(e => e.events)).map(e => e.start.getHours());\n        // subtracting one to have some more space\n        return Math.max(0, Math.min(...startHours) - 1);\n    }\n\n    getMaxHour() {\n        if (!this.props.layers)\n            return DEFAULT_END_HOUR;\n\n        let endHours = [].concat(...this.props.layers.map(e => e.events)).map(e => e.end.getHours());\n        // adding one to have some more space\n        return Math.min(Math.max(...endHours) + 1, 24);\n    }\n\n    getWeekCalendarStyle() {\n        return {\n            // extra 1 for the day bar\n            gridTemplateRows: `min-content repeat(${this.getMaxHour() - this.getMinHour()}, 1fr)`,\n            // extra 1 for the hour bar\n            gridTemplateColumns: `min-content repeat(${this.state.numDays}, 1fr)`\n        }\n    }\n\n    render() {\n        return (\n            <div style={this.getWeekCalendarStyle()} className=\"wc-container\">\n                <DayBar numDays={this.state.numDays}/>\n\n                <HourBar startHour={this.getMinHour()} endHour={this.getMaxHour()}/>\n\n                <EventCalendar startHour={this.getMinHour()}\n                               onEventDrop={this.props.onEventDrop}\n                               onEventResize={this.props.onEventResize}\n                               onCalendarClick={this.props.onCalendarClick}\n                               getEvent={this.props.getEvent}\n                               endHour={this.getMaxHour()}\n                               numDays={this.state.numDays}\n                               layers={this.props.layers}/>\n            </div>\n        )\n    }\n}\n\nWeekCalendar.propTypes = {\n    workWeek: PropTypes.bool,\n    layers: PropTypes.arrayOf(PropTypes.shape({\n        name: PropTypes.string,\n        events: PropTypes.arrayOf(PropTypes.object),\n        eventClassName: PropTypes.string\n    })),\n    onCalendarClick: PropTypes.func,\n    onEventDrop: PropTypes.func,\n    onEventResize: PropTypes.func,\n    getEvent: PropTypes.func\n};\n\nWeekCalendar.defaultProps = {\n    workWeek: true,\n    events: [],\n    layers: [],\n    onCalendarClick: () => {},\n    onEventDrop: () => {},\n    onEventResize: () => {},\n    getEvent: () => {\n        return <div/>\n    }\n};\n","import React from 'react';\nimport {\n    max,\n    addHours,\n    addSeconds,\n    addMinutes,\n    differenceInSeconds,\n    setHours,\n    setMinutes,\n    setSeconds,\n    setMilliseconds,\n    setDay\n} from 'date-fns';\nimport {Event} from \"../calendar/event/Event\";\nimport {WeekCalendar} from \"../calendar/week/WeekCalendar\";\nimport {END, START} from \"../resize/Resizable\";\n\nimport \"./demo.css\";\n\nconst EVENT = \"event\";\nconst PREFERENCE = \"preference\";\n\nexport class Demo extends React.PureComponent {\n\n    getEvent(props) {\n        return (\n            <Event {...props}/>\n        )\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            numCreated: 0,\n            events: [\n                {\n                    id: \"event1\",\n                    start: setDay(setMilliseconds(setSeconds(setMinutes(setHours(new Date(), 8), 0), 0), 0), 2),\n                    end: setDay(setMilliseconds(setSeconds(setMinutes(setHours(new Date(), 20), 0), 0), 0), 2)\n                },\n                {\n                    id: \"event2\",\n                    start: setDay(setMilliseconds(setSeconds(setMinutes(setHours(new Date(), 10), 30), 0), 0), 3),\n                    end: setDay(setMilliseconds(setSeconds(setMinutes(setHours(new Date(), 12), 50), 0), 0), 3)\n                },\n                {\n                    id: \"event3\",\n                    start: setDay(setMilliseconds(setSeconds(setMinutes(setHours(new Date(), 16), 20), 0), 0), 5),\n                    end: setDay(setMilliseconds(setSeconds(setMinutes(setHours(new Date(), 20), 30), 0), 0), 5)\n                },\n                {\n                    id: \"event4\",\n                    start: setDay(setMilliseconds(setSeconds(setMinutes(setHours(new Date(), 5), 20), 0), 0), 5),\n                    end: setDay(setMilliseconds(setSeconds(setMinutes(setHours(new Date(), 7), 30), 0), 0), 5)\n                },\n                {\n                    id: \"event5\",\n                    start: setDay(setMilliseconds(setSeconds(setMinutes(setHours(new Date(), 11), 0), 0), 0), 1),\n                    end: setDay(setMilliseconds(setSeconds(setMinutes(setHours(new Date(), 12), 20), 0), 0), 1)\n                },\n                {\n                    id: \"event6\",\n                    start: setDay(setMilliseconds(setSeconds(setMinutes(setHours(new Date(), 22), 0), 0), 0), 3),\n                    end: setDay(setMilliseconds(setSeconds(setMinutes(setHours(new Date(), 23), 20), 0), 0), 3)\n                },\n            ],\n            preferences: [\n                {\n                    id: \"preference1\",\n                    start: setDay(setMilliseconds(setSeconds(setMinutes(setHours(new Date(), 13), 0), 0), 0), 2),\n                    end: setDay(setMilliseconds(setSeconds(setMinutes(setHours(new Date(), 15), 0), 0), 0), 2)\n                },\n                {\n                    id: \"preference2\",\n                    start: setDay(setMilliseconds(setSeconds(setMinutes(setHours(new Date(), 5), 30), 0), 0), 3),\n                    end: setDay(setMilliseconds(setSeconds(setMinutes(setHours(new Date(), 7), 50), 0), 0), 3)\n                },\n            ]\n        }\n    }\n\n    onEventDrop(droppedEventId, layerName, timeEventDroppedOn) {\n        let dropType = EVENT;\n        let droppedEvent = this.state.events.filter((evt) => evt.id === droppedEventId)[0];\n        if (!droppedEvent) {\n            droppedEvent = this.state.preferences.filter((evt) => evt.id === droppedEventId)[0];\n            dropType = PREFERENCE;\n        }\n\n        const secondsDiff = differenceInSeconds(droppedEvent.end, droppedEvent.start);\n\n        const newEvent = Object.assign({}, droppedEvent);\n\n        newEvent.start = timeEventDroppedOn;\n        newEvent.end = addSeconds(timeEventDroppedOn, secondsDiff);\n\n        if (newEvent.start.getDay() !== newEvent.end.getDay())\n            return;\n\n        if (dropType === EVENT) {\n            const eventsWithoutDroppedEvent = this.state.events.filter((evt) => evt.id !== droppedEventId);\n            this.setState({\n                events: [...eventsWithoutDroppedEvent, newEvent]\n            });\n        } else {\n            const preferencesWithoutDroppedEvent = this.state.preferences.filter((evt) => evt.id !== droppedEventId);\n            this.setState({\n                preferences: [...preferencesWithoutDroppedEvent, newEvent]\n            });\n        }\n    }\n\n    onEventResize(droppedEventId, timeEventResizedTo, resizeType) {\n        let dropType = EVENT;\n        let droppedEvent = this.state.events.filter((evt) => evt.id === droppedEventId)[0];\n        if (!droppedEvent) {\n            droppedEvent = this.state.preferences.filter((evt) => evt.id === droppedEventId)[0];\n            dropType = PREFERENCE;\n        }\n\n        const minVal = addMinutes(droppedEvent.start, 30);\n\n        const newEvent = Object.assign({}, droppedEvent);\n\n        if (newEvent.start.getDay() !== newEvent.end.getDay())\n            return;\n\n        if (newEvent.start.getDay() !== timeEventResizedTo.getDay())\n            return;\n\n        if (resizeType === END) {\n            newEvent.end = max(minVal, timeEventResizedTo);\n        } else if (resizeType === START) {\n            newEvent.start = timeEventResizedTo;\n        }\n\n        if (dropType === EVENT) {\n            const eventsWithoutDroppedEvent = this.state.events.filter((evt) => evt.id !== droppedEventId);\n            this.setState({\n                events: [...eventsWithoutDroppedEvent, newEvent]\n            });\n        } else {\n            const preferencesWithoutDropEvent = this.state.preferences.filter((evt) => evt.id !== droppedEventId);\n            this.setState({\n                preferences: [...preferencesWithoutDropEvent, newEvent]\n            });\n        }\n    }\n\n    onCalendarClick(timeClickedOn) {\n        const start = timeClickedOn;\n        const end = addHours(timeClickedOn, 1);\n\n        if (start.getDay() !== end.getDay())\n            return;\n\n        const newEvent = {id: \"created-event\" + this.state.numCreated, start: start, end: end};\n        this.setState({numCreated: this.state.numCreated + 1, events: [...this.state.events, newEvent]});\n    }\n\n\n    render() {\n        const eventComponents = this.state.events;\n        const preferenceComponents = this.state.preferences;\n\n        const layers = [\n            {name: EVENT, events: eventComponents, eventClassName: EVENT},\n            {name: PREFERENCE, events: preferenceComponents, eventClassName: PREFERENCE}\n        ];\n\n        return (\n            <WeekCalendar layers={layers}\n                          getEvent={this.getEvent.bind(this)}\n                          onCalendarClick={this.onCalendarClick.bind(this)}\n                          onEventDrop={this.onEventDrop.bind(this)}\n                          onEventResize={this.onEventResize.bind(this)}/>\n        )\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './demo.css';\nimport {Demo} from \"./demo/demo\";\n\n\nReactDOM.render(\n    <div style={{height: \"100%\", padding: \"10em\"}}>\n        <Demo />\n    </div>\n    , document.getElementById('root'));\n\n"],"sourceRoot":""}